quit
display char
display is_num
display is_num.include?(char)
display char
step
display char
step
quit
display words
display word
display current_word
step
display word
step
display current_word
step
display current_word
step
display current_word
step
display current_word
step
display current_word
display word
step
display hash
display hash.keys
display hash.keys.any? {|key| key.call(word)}
step
display word
quit
display iterator
step
display arr
step
display is_prime?(13)
step
display iterator
step
setp
step
display iterator
step
display is_prime?(num)
step
display iterator
step
display arr[-1] == 2
display arr.length
display iterator
step
return arr[-1] == 2
step
display arr.length
display iterator
step
quit
step
display new_arr.delete_at(j)
display new_arr
step
display new_arr.delete_at(i)
display new_arr
step
display num2 - num1 == 1
display num1 - num2 == 1
step
display are_consecutive(arr[i], arr[j])
display arr[j]
displau arr[j]
display arr[i]
step
display i
display j
